{"version":3,"file":"distrpute.min.js","sources":["../src/distrpute.js"],"sourcesContent":["define(['jquery', 'core/ajax','core/str'], function ($, Ajax,str) {\n    'use strict';\n    return {\n        init: function () {\n\n            var msg;\n            var status;\n            var statustxt;\n            var response;\n            var args;\n\n            var strings = [\n                { key: 'msg', component: 'local_restrict' },\n                { key: 'status', component: 'local_restrict' },\n                { key: 'statustxt', component: 'local_restrict' },\n                { key: 'response', component: 'local_restrict' },\n                { key: 'args', component: 'local_restrict' }\n            ];\n\n             str.get_strings(strings).then(function (results) {\n                msg = results[0];\n                status = results[1];\n                statustxt = results[2];\n                response = results[3];\n                args = results[4];\n            }).catch(function (e) {\n                alert('Failed to load strings:', e);\n            });\n\n\n            // -------- Form Submit\n            $('.mform').submit(function (e) {\n                e.preventDefault();\n\n                var data = $(this).serializeArray();\n                var labs = [];\n                var quizes = [];\n\n                //labs and course debugging\n                let course_debug = data.find(x => x.name === \"course\")?.value;\n                let labs_debug = data.filter(x => x.name === \"labs[]\").map(x => x.value);\n\n                if(!course_debug.length|| labs_debug.length <= 0){\n                    alert(\"Please Select Course and Labs\");\n                    return;\n                }\n\n                $(this).find('input[name=\"labs[]\"]:checked').each(function () {\n                    labs.push($(this).val());\n                });\n\n                $(this).find('input[name=\"quizes[]\"]:checked').each(function () {\n                    quizes.push($(this).val());\n                });\n\n                var usersArgs = {\n                    courseid: parseInt(data[2].value),\n                    labs: labs,\n                    quiz: quizes\n                };\n\n                Ajax.call([{\n                    methodname: 'local_restrict_get_users',\n                    args: usersArgs\n                }])[0].then(function (res) {\n                    var msgDiv = $('.msg-div');\n                    msgDiv.removeClass('msg-err msg-success');\n\n                    if (res.status === 0) {\n                        msgDiv.html(res.message).addClass('msg-err').fadeIn(200);\n                    } else {\n                        msgDiv.html(res.message).addClass('msg-success').fadeIn(200);\n                    }\n\n                }).catch(function (err) {\n                    let fullError = `\n                                    <div style=\"color:red;\">\n                                        <strong> ${str.get_string('ajxerr','local_restrict')}</strong><br>\n                                        ${msg} ${err.message || 'N/A'}<br>\n                                        ${status} ${err.status || 'N/A'}<br>\n                                        ${statustxt} ${err.statusText || 'N/A'}<br>\n                                        ${response}\n                                        ${err.responseText || JSON.stringify(err)}<br>\n                                        ${args}\n                                        ${JSON.stringify(usersArgs)}\n                                    </div>\n                                `;\n                    $('#ajx-err').html(fullError);\n                });\n\n            });\n\n            // -------- Course Change\n            $('input[name=course]').change(function () {\n                var val = parseInt($(this).val());\n\n                // Get Quizes\n                var quizesArgs = {\n                    courseid: val\n                };\n                Ajax.call([{\n                    methodname: 'local_restrict_get_quizes',\n                    args: quizesArgs\n                }])[0].then(function (res) {\n                    let html = '';\n                    if (res.status == 1) {\n                        $.each(res.message, function (index, value) {\n                            html += `<div class=\"form-check form-check-inline\" data-id=\"${index}\">\n                                <input class=\"form-check-input\" name=\"quizes[]\" type=\"checkbox\"\n                                id=\"checkbox${value.id}\" value=\"${value.id}\">\n                                <label class=\"form-check-label\" for=\"checkbox${value.id}\">${value.name}</label>\n                            </div>`;\n                        });\n                        $('#quizes-div').html(html);\n                    }\n\n                }).catch(function (err) {\n                    let fullError = `\n                                    <div style=\"color:red;\">\n                                        <strong> ${str.get_string('ajxerr','local_restrict')}</strong><br>\n                                        ${msg} ${err.message || 'N/A'}<br>\n                                        ${status} ${err.status || 'N/A'}<br>\n                                        ${statustxt} ${err.statusText || 'N/A'}<br>\n                                        ${response}\n                                        ${err.responseText || JSON.stringify(err)}<br>\n                                        ${args}\n                                        ${JSON.stringify(quizesArgs)}\n                                    </div>\n                                `;\n                    $('#ajx-err').html(fullError);\n                });\n            });\n        }\n    };\n});"],"names":["define","$","Ajax","str","init","msg","status","statustxt","response","args","get_strings","key","component","then","results","catch","e","alert","submit","preventDefault","data","this","serializeArray","labs","quizes","course_debug","find","x","name","_data$find","value","labs_debug","filter","map","length","each","push","val","usersArgs","courseid","parseInt","quiz","call","methodname","res","msgDiv","removeClass","html","message","addClass","fadeIn","err","fullError","get_string","statusText","responseText","JSON","stringify","change","quizesArgs","index","id"],"mappings":"AAAAA,kCAAO,CAAC,SAAU,YAAY,aAAa,SAAUC,EAAGC,KAAKC,WAElD,CACHC,KAAM,eAEEC,IACAC,OACAC,UACAC,SACAC,KAUHN,IAAIO,YARS,CACV,CAAEC,IAAK,MAAOC,UAAW,kBACzB,CAAED,IAAK,SAAUC,UAAW,kBAC5B,CAAED,IAAK,YAAaC,UAAW,kBAC/B,CAAED,IAAK,WAAYC,UAAW,kBAC9B,CAAED,IAAK,OAAQC,UAAW,oBAGJC,MAAK,SAAUC,SACrCT,IAAMS,QAAQ,GACdR,OAASQ,QAAQ,GACjBP,UAAYO,QAAQ,GACpBN,SAAWM,QAAQ,GACnBL,KAAOK,QAAQ,MAChBC,OAAM,SAAUC,GACfC,MAAM,0BAA2BD,MAKrCf,EAAE,UAAUiB,QAAO,SAAUF,kBACzBA,EAAEG,qBAEEC,KAAOnB,EAAEoB,MAAMC,iBACfC,KAAO,GACPC,OAAS,OAGTC,gCAAeL,KAAKM,MAAKC,GAAgB,WAAXA,EAAEC,oCAAjBC,WAAqCC,MACpDC,WAAaX,KAAKY,QAAOL,GAAgB,WAAXA,EAAEC,OAAmBK,KAAIN,GAAKA,EAAEG,YAE9DL,aAAaS,QAASH,WAAWG,QAAU,EAC3CjB,MAAM,sCAIVhB,EAAEoB,MAAMK,KAAK,gCAAgCS,MAAK,WAC9CZ,KAAKa,KAAKnC,EAAEoB,MAAMgB,UAGtBpC,EAAEoB,MAAMK,KAAK,kCAAkCS,MAAK,WAChDX,OAAOY,KAAKnC,EAAEoB,MAAMgB,cAGpBC,UAAY,CACZC,SAAUC,SAASpB,KAAK,GAAGU,OAC3BP,KAAMA,KACNkB,KAAMjB,QAGVtB,KAAKwC,KAAK,CAAC,CACPC,WAAY,2BACZlC,KAAM6B,aACN,GAAGzB,MAAK,SAAU+B,SACdC,OAAS5C,EAAE,YACf4C,OAAOC,YAAY,uBAEA,IAAfF,IAAItC,OACJuC,OAAOE,KAAKH,IAAII,SAASC,SAAS,WAAWC,OAAO,KAEpDL,OAAOE,KAAKH,IAAII,SAASC,SAAS,eAAeC,OAAO,QAG7DnC,OAAM,SAAUoC,SACXC,qIAE2BjD,IAAIkD,WAAW,SAAS,oFACjChD,gBAAO8C,IAAIH,SAAW,+DACtB1C,mBAAU6C,IAAI7C,QAAU,+DACxBC,sBAAa4C,IAAIG,YAAc,+DAC/B9C,8DACA2C,IAAII,cAAgBC,KAAKC,UAAUN,8DACnC1C,0DACA+C,KAAKC,UAAUnB,6FAGrCrC,EAAE,YAAY8C,KAAKK,kBAM3BnD,EAAE,sBAAsByD,QAAO,eAIvBC,WAAa,CACbpB,SAJMC,SAASvC,EAAEoB,MAAMgB,QAM3BnC,KAAKwC,KAAK,CAAC,CACPC,WAAY,4BACZlC,KAAMkD,cACN,GAAG9C,MAAK,SAAU+B,SACdG,KAAO,GACO,GAAdH,IAAItC,SACJL,EAAEkC,KAAKS,IAAII,SAAS,SAAUY,MAAO9B,OACjCiB,mEAA8Da,kKAE5C9B,MAAM+B,uBAAc/B,MAAM+B,+FACO/B,MAAM+B,gBAAO/B,MAAMF,wDAG1E3B,EAAE,eAAe8C,KAAKA,UAG3BhC,OAAM,SAAUoC,SACXC,qIAE2BjD,IAAIkD,WAAW,SAAS,oFACjChD,gBAAO8C,IAAIH,SAAW,+DACtB1C,mBAAU6C,IAAI7C,QAAU,+DACxBC,sBAAa4C,IAAIG,YAAc,+DAC/B9C,8DACA2C,IAAII,cAAgBC,KAAKC,UAAUN,8DACnC1C,0DACA+C,KAAKC,UAAUE,8FAGrC1D,EAAE,YAAY8C,KAAKK"}.